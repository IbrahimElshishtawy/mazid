// ignore_for_file: file_names

import 'package:flutter/material.dart';
import 'package:mazid/core/models/swap_request_model.dart';
import 'package:mazid/core/service/swip/swap_service.dart';

/// Widget ุนุจุงุฑุฉ ุนู ูุงุฆูุฉ ููุจุซูุฉ (Popup Menu) ุฎุงุตุฉ ุจูุงุฑุช ุงูููุชุฌ.
/// - ุจุชุธูุฑ ุนูู ุดูู ุฃููููุฉ (โฎ) ูู ุงููุงุฑุช.
/// - ุงููุณุชุฎุฏู ููุฏุฑ ูุฎุชุงุฑ ูููุง ุนูููุงุช ุฒู:
///   1. ุนุฑุถ ุชูุงุตูู ุงูููุชุฌ.
///   2. ุฅุถุงูุฉ ุงูููุชุฌ ุฅูู ุงูุณูุฉ.
///   3. ุฅุฒุงูุฉ ุงูููุชุฌ.
/// ุงูุตูุญูู ุงููุดูุงูู ุนู ุงุชุฎุงุฐ ุงููุฑุงุฑ ุงูุชุฌุง ุจูุน ุงู ุดุฑุงุก ุงูุชู ููุงุช ุงุจูุชุฌุฑุงูุฎ
/// ุงุชุฎุฌ ููุช ุงูุจุงู ุงููุฏ ููููุฉ ุงูููุบุณ ุงููุงุฑุณ  ุงู
/// ุนูู ุงูุงุชุฌุฎููุง ุงูุณูุงู ุง
/// ุจุชุณุชุฎุฏู `SwapRequestModel` ู `SwapService` ุนุดุงู ุชุชุนุงูู ูุน ุชูุงุตูู ุงูุทูุจ ูู ูุชููุฑุฉ.
class ProductCardMenu extends StatelessWidget {
  final SwapProductModel? swapRequest; // ุจูุงูุงุช ุงูุทูุจ (ูู ูุชููุฑุฉ)
  final SwapService? swapService; // ุฎุฏูุฉ ุฅุฏุงุฑุฉ ุงูุทูุจุงุช (ูู ูุชููุฑุฉ)

  const ProductCardMenu({
    super.key,
    this.swapRequest,
    this.swapService,
    required SwapProductModel product,
  });

  @override
  Widget build(BuildContext context) {
    return PopupMenuButton<String>(
      color: Colors.grey[850], // ููู ุฎูููุฉ ุงููุงุฆูุฉ
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(10)),
      icon: const Icon(Icons.more_vert, color: Colors.white), // ุฃููููุฉ ุงููุงุฆูุฉ
      // ุงูุชุนุงูู ูุน ุงูุงุฎุชูุงุฑุงุช
      onSelected: (value) {
        switch (value) {
          case "details": // ุนุฑุถ ุงูุชูุงุตูู
            if (swapRequest != null && swapService != null) {
              // ๐น ููุง ูููู ุชุฑูุญ ูุตูุญุฉ ุชูุงุตูู ุงูููุชุฌ
            } else {
              // ูู ูููุด ุจูุงูุงุช ูุชุงุญุฉ
              ScaffoldMessenger.of(context).showSnackBar(
                const SnackBar(
                  content: Text("ูุง ุชูุฌุฏ ุชูุงุตูู ูุชุงุญุฉ ููุฐุง ุงูููุชุฌ"),
                ),
              );
            }
            break;

          case "cart": // ุฅุถุงูุฉ ุงูููุชุฌ ููุณูุฉ
            ScaffoldMessenger.of(context).showSnackBar(
              const SnackBar(content: Text("ุชูุช ุฅุถุงูุฉ ุงูููุชุฌ ุฅูู ุงูุณููุฉ")),
            );
            break;

          case "remove": // ุฅุฒุงูุฉ ุงูููุชุฌ
            ScaffoldMessenger.of(
              context,
            ).showSnackBar(const SnackBar(content: Text("ุชูุช ุฅุฒุงูุฉ ุงูููุชุฌ")));
            break;
        }
      },

      // ุงูุนูุงุตุฑ ุงููู ุจุชุธูุฑ ูู ุงููุงุฆูุฉ
      itemBuilder: (context) => const [
        PopupMenuItem(
          value: "details",
          child: Row(
            children: [
              Icon(Icons.info, color: Colors.white, size: 20),
              SizedBox(width: 8),
              Text("ุนุฑุถ ุงูุชูุงุตูู"),
            ],
          ),
        ),
        PopupMenuItem(
          value: "cart",
          child: Row(
            children: [
              Icon(Icons.shopping_cart, color: Colors.white, size: 20),
              SizedBox(width: 8),
              Text("ุฅุถุงูุฉ ุฅูู ุงูุณููุฉ"),
            ],
          ),
        ),
        PopupMenuItem(
          value: "remove",
          child: Row(
            children: [
              Icon(Icons.delete, color: Colors.red, size: 20),
              SizedBox(width: 8),
              Text("ุฅุฒุงูุฉ"),
            ],
          ),
        ),
      ],
    );
  }
}
